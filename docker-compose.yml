version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14
    container_name: attendee-postgres
    environment:
      POSTGRES_DB: attendeevdt
      POSTGRES_USER: attendeeuser
      POSTGRES_PASSWORD: attendeepass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "attendeeuser", "-d", "attendeevdt"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - attendee-network

  # Spring Boot Backend
  backend:
    build:
      context: ./attendeevdt
      dockerfile: Dockerfile
    container_name: attendee-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/attendeevdt
      SPRING_DATASOURCE_USERNAME: attendeeuser
      SPRING_DATASOURCE_PASSWORD: attendeepass
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - attendee-network

  # Nginx Frontend
  frontend:
    build:
      context: ./attendees-frontend
      dockerfile: Dockerfile
    container_name: attendee-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - attendee-network

networks:
  attendee-network:
    driver: bridge

volumes:
  postgres-data: